name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    name: Lint, Test, Audit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      # Checkout repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up the requested Node.js version
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Cache npm dependencies to speed up installs
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      # Install project dependencies using a clean npm install
      - name: Install dependencies
        run: npm ci

      # Run ESLint to ensure code style and quality
      - name: Run linter
        run: npm run lint

      # Execute the test suite with Vitest
      - name: Run tests
        run: npm run test

      # Upload test coverage or results if generated
      - name: Upload test artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-${{ matrix.node-version }}
          path: |
            coverage
            test-results
          if-no-files-found: ignore

      # Check for vulnerable dependencies
      - name: Security audit
        run: npm audit --audit-level=high
